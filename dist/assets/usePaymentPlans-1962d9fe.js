import{r,ac as h}from"./index-a54c57b2.js";import{$ as p}from"./api-f4900d91.js";import{c as m,b as v,a as O}from"./notifications-cae4d01c.js";const E=async a=>await p(`/opportunity/kanban/${a}`,{method:"GET"}),b=async a=>await p(`/opportunity/get-opportunity/${a}`,{method:"GET"}),A=async(a,e)=>await p(`/opportunity/convert-prospect/${a}`,{method:"PATCH",body:e}),S=async(a,e)=>await p(`/opportunity/update/${a}`,{method:"PATCH",body:e}),w=async(a,e,c)=>await p(`/opportunity/${a}/stage/${e}`,{method:"PATCH",body:c});function z(){const a=r(!1),e=r(null),c=h("userData").value,t=r({description:"",customer:{name:"",email:"",phone:"",ci:""},stage:{id:"",name:"",description:""},property:{id:"",title:"",code:"",description:""}}),P=r(null);return{loadingOpportunity:a,error:e,opportunity:t,kanban:P,allOpportunityKanbanForUser:async()=>{try{const n=await E(c.id);console.log(n.data),P.value=n.data,console.log(P)}catch(n){console.error(n)}},changeStatusByOpportunity:async(n,s,l)=>{a.value=!0;try{const y=await w(n,s,l);console.log("Oportunidad actualizada: ",y),t.value=y.data,s!=6&&s!=7?m("¡Oportunidad avanzó a una nueva etapa!"):s==7?m("¡Oportunidad fue completada!"):m("¡Oportunidad fue dada de Baja!")}catch(y){console.log(y),y.response&&y.response.status==500&&v("Advertencia",y.response._data.message)}finally{a.value=!1}},getOpportunitybyId:async n=>{try{const s=await b(n);t.value=s.data,console.log("esta es la oportunidad: ",t.value)}catch(s){console.error(s)}},changeOpportunity:async(n,s)=>{a.value=!0;try{const l=await S(n,s);t.value=l.data,console.log("Oportunidad actualizada: ",t.value),m("Oportunidad actualizada correctamente","Los detalles de la oportunidad han sido modificados.")}catch(l){e.value=l,console.error(l)}finally{a.value=!1}},generateProspect:async(n,s)=>{try{const l=await A(n,s);console.log(l),t.value=l.data}catch(l){console.error(l)}finally{}}}}const T=async(a,e)=>await p(`/opportunity/${a}/stage/${e}`,{method:"GET"}),C=async(a,e,c)=>await p(`/opportunity/${a}/procedure/${e}`,{method:"PATCH",body:c});function H(){const a=r(null),e=r(!1),c=r(!1),t=r([]);return{process:a,loadingProcess:e,errorProcess:c,processes:t,allProcessesOpportunityForStage:async(u,i)=>{try{const o=await T(u,i);t.value=o.data}catch(o){console.log(o)}},checkProcessForOpportunity:async(u,i,o)=>{try{console.log(o);const g=await C(u,i,o);O("¡Proceso completado exitosamente!","El proceso ha sido llevado a cabo sin inconvenientes. ")}catch(g){console.log(g)}}}}const d={LEAD:{value:1,label:"LEAD"},PROSPECT:{value:2,label:"PROSPECTO"},PRESALE:{value:3,label:"PRE-VENTA"},SALE:{value:4,label:"VENTA"},DELIVERY:{value:5,label:"ENTREGA"},LOSS:{value:6,label:"PERDIDA"},FINISHED:{value:7,label:"COMPLETADA"}};d.LEAD.label+"",d.PROSPECT.label,d.PRESALE.label,d.PROSPECT.label+"",d.PRESALE.label,d.PRESALE.label+"",d.SALE.label;const L=async a=>await p(`/sale/paymentPlans/${a}/confirm`,{method:"PATCH"}),$=async(a,e)=>await p(`/sale/paymentPlans/${a}`,{method:"PATCH",body:e});function N(){const a=r(!1),e=r([]),c=r(null),t=r(null);return{loadingPaymentPlans:a,paymentPlan:t,error:c,paymentPlans:e,confirmPaymentPlans:async u=>{try{const i=await L(u);O("Actualizacion Exitosa","Se confirmo el pago")}catch(i){console.log(i),v("Advertencia","No se puedo realizar la confirmacion")}},updatePaymentPlans:async(u,i)=>{a.value=!0,c.value=null;try{console.log(i);const o=await $(u,i);t.value=o.data,m("¡Planes de pago actualizados exitosamente! ","Los planes de pago han sido modificados y guardados correctamente."),console.log(o)}catch(o){console.log(o),o.response&&o.response.status==422&&v("Advertencia","Faltan datos por Completar"),c.value=o.message}finally{a.value=!1}}}}export{d as S,H as a,N as b,z as u};
