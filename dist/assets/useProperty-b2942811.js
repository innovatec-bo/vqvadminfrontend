import{$ as a}from"./api-244ee7c5.js";import{s as f,a as T,b,c as A,d as v}from"./notifications-5942749b.js";import{ac as _,r as l,k as h,a2 as m}from"./index-c350574b.js";import{D as u,L as i}from"./constants-8e30317b.js";const w=async o=>await a("/property",{method:"POST",body:o}),I=async o=>await a(`/property/${o}`,{method:"GET"}),N=async o=>await a("/properties",{method:"GET",params:o}),R=async(o,s)=>await a(`/project/${s}/properties`,{method:"GET",params:o}),g=async(o,s)=>await a(`/property/${o}`,{method:"PATCH",body:s}),O=async o=>await a(`/property${o}`,{method:"DELETE"}),S=async o=>await a(`/properties/${o}`,{method:"GET"});function B(){_("userData").value;const o=l(!1),s=l(null),P=h(),d=l(null),c=l([]),n=l(0);return{loadingProperty:o,error:s,addProperty:async e=>{o.value=!0,s.value=null;try{console.log("este es el formulario:",e);const t={1:"DEPARTAMENT",2:"PARK"}[e.propertyDetails.propertyType.value]||"UNKNOWN";console.log(t);const y={code:e.propertyDetails.code,surface:e.propertyFeatures.surface,description:e.propertyDetails.description,delivery_date:e.propertyDetails.deliveryDate,base_price:e.propertyDetails.price,percentage_initial_fee:e.propertyDetails.percentageinitialfee,property_type:t,property_type_id:e.propertyDetails.propertyType.value,project_id:e.propertyDetails.projectType.value,benefits:e.propertyFeatures.benefitsDetails.map(p=>p.value),features:e.propertyFeatures.featureDetails.map(p=>p.value),type_department_id:t===u?e.propertyFeatures.typeDepartmentsDetails.value:null,number_bathrooms:t!==i?e.propertyFeatures.bathroomCount:"",number_bedrooms:t!==i?e.propertyFeatures.bedroomCount:"",number_floors:t!==i&&t!==u?e.propertyFeatures.floorNo:"",floors:t===u?e.propertyFeatures.floor:"",number_rooms:""};console.log(y);const E=await w(y);console.log("Respuesta del servidor:",E),f("CREACION EXITOSA","LA PROPIEDAD FUE REGISTRADA EXITOSAMENTE"),P.push("/realty/property/list")}catch(r){console.log(r),r.response&&r.response.status==422&&T("ERROR","FALTAN DATOS POR RELLENAR")}finally{o.value=!1}},editProperty:async e=>{o.value=!0,s.value=null;try{const r={title:e.title,code:e.code,surface:e.surface,base_price:e.base_price,percentage_initial_fee:e.percentage_initial_fee,property_type:e.property_type,number_bathrooms:e.departament.number_bathrooms,number_bedrooms:e.departament.number_bedrooms,floor:e.departament.floor,covered:!!(e!=null&&e.covered)},t=await g(e.id,r);return b("Actualización Exitosa","La propiedad ha sido actualizada correctamente."),{success:!0,message:"Actualización Exitosa"}}catch(r){return r.response&&r.response.status==422?(A("Validación fallida","Faltan datos por rellenar"),{success:!1,message:"Validación fallida"}):(v("Error de Actualización","Hubo un problema al actualizar la propiedad."),{success:!1,message:"Error de actualización"})}finally{o.value=!1}},getPropertyId:async e=>{try{const r=await I(e);d.value=r.data}catch(r){console.log(r)}},allProperty:async e=>{try{const r=await N(e);console.log("respuesta",r),c.value=r.data.data,n.value=r.data.total}catch(r){console.log(r)}},allPropertybyProject:async(e,r)=>{try{const t=await R(e,r);console.log("respuesta",t),c.value=t.data.data,n.value=t.data.total}catch(t){console.log(t)}},propertiesForType:async e=>{try{const r=await S(e);return console.log("propertyfortype ",r.data),r.data}catch(r){console.log(r)}},removeProperty:async e=>{try{const r=await O(e);console.log(r),f("ELIMINACION EXITOSA","LA PROPIEDAD FUE ELIMINADA EXITOSAMENTE")}catch(r){console.log(r)}},properties:m(()=>c.value),property:d,totalProperties:m(()=>n.value)}}export{B as u};
