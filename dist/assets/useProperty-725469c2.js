import{$ as a}from"./api-66699b1a.js";import{s as u,a as P,b}from"./notifications-73ea9381.js";import{ac as v,r as l,k as A,a2 as m}from"./index-816a661b.js";import{D as i,L as y}from"./constants-d5c22183.js";const _=async o=>await a("/property",{method:"POST",body:o}),h=async o=>await a(`/property/${o}`,{method:"GET"}),N=async o=>await a("/properties",{method:"GET",params:o}),w=async(o,s)=>await a(`/project/${s}/properties`,{method:"GET",params:o}),I=async(o,s)=>await a(`/property/${o}`,{method:"PATCH",body:s}),R=async o=>await a(`/property${o}`,{method:"DELETE"}),O=async o=>await a(`/properties/${o}`,{method:"GET"});function x(){v("userData").value;const o=l(!1),s=l(null),E=A(),d=l(null),c=l([]),n=l(0);return{loadingProperty:o,error:s,addProperty:async e=>{o.value=!0,s.value=null;try{console.log("este es el formulario:",e);const t={1:"DEPARTAMENT",2:"PARK"}[e.propertyDetails.propertyType.value]||"UNKNOWN";console.log(t);const f={code:e.propertyDetails.code,surface:e.propertyFeatures.surface,description:e.propertyDetails.description,delivery_date:e.propertyDetails.deliveryDate,base_price:e.propertyDetails.price,percentage_initial_fee:e.propertyDetails.percentageinitialfee,property_type:t,property_type_id:e.propertyDetails.propertyType.value,project_id:e.propertyDetails.projectType.value,benefits:e.propertyFeatures.benefitsDetails.map(p=>p.value),features:e.propertyFeatures.featureDetails.map(p=>p.value),type_department_id:t===i?e.propertyFeatures.typeDepartmentsDetails.value:null,number_bathrooms:t!==y?e.propertyFeatures.bathroomCount:"",number_bedrooms:t!==y?e.propertyFeatures.bedroomCount:"",number_floors:t!==y&&t!==i?e.propertyFeatures.floorNo:"",floors:t===i?e.propertyFeatures.floor:"",number_rooms:""};console.log(f);const T=await _(f);console.log("Respuesta del servidor:",T),u("CREACION EXITOSA","LA PROPIEDAD FUE REGISTRADA EXITOSAMENTE"),E.push("/realty/property/list")}catch(r){console.log(r),r.response&&r.response.status==422&&P("ERROR","FALTAN DATOS POR RELLENAR")}finally{o.value=!1}},editProperty:async e=>{o.value=!0,s.value=null;try{const r={title:e.title,code:e.code,surface:e.surface,base_price:e.base_price,percentage_initial_fee:e.percentage_initial_fee,property_type:e.property_type.value,number_bathrooms:e.departament.number_bathrooms,number_bedrooms:e.departament.number_bedrooms,floor:e.departament.floor,covered:!!(e!=null&&e.covered)},t=await I(e.id,r);u("Actualización Exitosa","La propiedad ha sido actualizada correctamente.")}catch(r){if(console.error(r),r.response&&r.response.status==422){P("Validación","Faltan datos por rellenar");return}b("Error de Actualización","Hubo un problema al actualizar la propiedad.")}finally{o.value=!1}},getPropertyId:async e=>{try{const r=await h(e);d.value=r.data}catch(r){console.log(r)}},allProperty:async e=>{try{const r=await N(e);console.log("respuesta",r),c.value=r.data.data,n.value=r.data.total}catch(r){console.log(r)}},allPropertybyProject:async(e,r)=>{try{const t=await w(e,r);console.log("respuesta",t),c.value=t.data.data,n.value=t.data.total}catch(t){console.log(t)}},propertiesForType:async e=>{try{const r=await O(e);return console.log("propertyfortype ",r.data),r.data}catch(r){console.log(r)}},removeProperty:async e=>{try{const r=await R(e);console.log(r),u("ELIMINACION EXITOSA","LA PROPIEDAD FUE ELIMINADA EXITOSAMENTE")}catch(r){console.log(r)}},properties:m(()=>c.value),property:d,totalProperties:m(()=>n.value)}}export{x as u};
